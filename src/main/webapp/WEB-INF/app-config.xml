<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:cloud="http://schema.cloudfoundry.org/spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.4.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- scan for all classes within the package, but IGNORE all annotated with 
		@Controller (they are handled in dispatcher context) -->
	<context:component-scan base-package="ie.cit.cloud">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
<!-- 
	<jdbc:embedded-database id="dataSource" type="H2" />
	<bean id="org.h2.tools.Server-WebServer" 
		class="org.h2.tools.Server"
		factory-method="createWebServer" 
		depends-on="dataSource"
		init-method="start"
		lazy-init="false" 
		destroy-method="stop">
		<constructor-arg value="-web,-webPort,8082" />
	</bean>
 -->
	<cloud:data-source id="dataSource"/>
 
 	<aop:aspectj-autoproxy />

	<tx:annotation-driven />

	<!-- convert native exceptions to Spring exceptions -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="emf" />
	</bean>
	<bean id="emf"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="tickets" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<security:http auto-config="true">	<!-- register default filters with auto-config -->
		<security:intercept-url pattern="/secure/*" access="ROLE_USER,ROLE_ADMIN"/>
		<security:intercept-url pattern="/admin/*" access="ROLE_ADMIN"/>
	</security:http>

	<security:global-method-security secured-annotations="enabled" />
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service properties="classpath:users.properties">
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
